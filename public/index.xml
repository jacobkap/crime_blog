<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Crime By The Numbers on Crime By The Numbers</title>
    <link>/</link>
    <description>Recent content in Crime By The Numbers on Crime By The Numbers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Jacob Kaplan</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Importance of Using Consistent Agencies in Crime Analysis</title>
      <link>/the-importance-of-using-consistent-agencies-in-crime-analysis/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/the-importance-of-using-consistent-agencies-in-crime-analysis/</guid>
      <description>&lt;p&gt;An important but often overlooked fact of crime analysis is that crime data changes every year. I don’t mean that crime changes every year, though of course it does. The data itself changes. More specifically, the agencies that report data change. Each year, different police agencies report their data to the FBI.&lt;/p&gt;
&lt;p&gt;This means that we can’t simply compare UCR data in 2016 to UCR data from 2015. 2016 has different agencies to 2015 so it isn’t an apples-to-apples comparison. To properly measure crime over time, we need to only use agencies that report every year studied. In most cases that means just using the agencies that reported during the first year. However, some years actually have agencies stop reporting.&lt;/p&gt;
&lt;p&gt;Usually once an agency begins reporting, they keep reporting. This leads to a fairly consistent growth of the number of reporting agencies over time. This increase in agencies also comes with an increase in crimes these new agencies report. Forgetting to exclude new agencies when comparing to previous years will incorrectly show an increase (or a more exaggerated increase) in crime that may not be real.&lt;/p&gt;
&lt;p&gt;Figure 1 shows the number of reporting agencies to the UCR since 1960. The earliest data shows about 8,000 reporting agencies while modern data contains over 25,000 agencies. Following a spike in reporting agencies during the 1970s, the growth in the number of agencies has been fairly linearly positive. As most large agencies began reporting fairly early, these new agencies are often small and have fairly few crimes per year. This lessens the impact of not using consistent ORIs as the additional agencies contribute relatively little crime overall. Over a long period, however, even small additions in crime can have a large effect in our data. Figures 2 and 3 look into precisely that effect using murder as an example.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/consistent_ORIs_files/figure-html/unnamed-chunk-2-1.png&#34; alt=&#34;Total number of ORIs reporting UCR data 1960-2016.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Total number of ORIs reporting UCR data 1960-2016.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Figure 2 shows how many additional murders were reported across all agencies from 1990-2016 relative to consistent ORIs starting from 1990. Even in 1990 itself there is a slight difference, with about 25 more murders in total ORIs than in consistent ORIs. This is because some agencies stopped reporting sometime between 1990 and 2016, and thus are excluded from the consistent ORIs.&lt;/p&gt;
&lt;p&gt;As the years progress the disparity between total ORIs and consistent ORIs expands. This culminates in over 500 more murders using all 2016 ORIs relative to just consistent ORIs from 1990. The further back you go as your starting year, the greater number of crimes you’ll erroneously include if you forget to use consistent ORIs.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-3&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/consistent_ORIs_files/figure-html/unnamed-chunk-3-1.png&#34; alt=&#34;Number of additional murders reporting by all ORIs 1990-2016 relative to consistent ORIs starting in 1990.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Number of additional murders reporting by all ORIs 1990-2016 relative to consistent ORIs starting in 1990.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This figure shows the same data as Figure 2 but now is in percent difference units rather than raw counts. By 2016, that 500 murder increase is slightly more than a 3% increase in yearly murders purely due to the new ORIs.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-4&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/consistent_ORIs_files/figure-html/unnamed-chunk-4-1.png&#34; alt=&#34;Percent increase in additional murders reporting by all ORIs 1990-2016 relative to consistent ORIs starting in 1990.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Percent increase in additional murders reporting by all ORIs 1990-2016 relative to consistent ORIs starting in 1990.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This final figure shows year-over-year change in ORIs. It’s fairly similar to Figure 1 in that they both show an increasing trend. This figure shows that some agencies drop from reporting. This is important. Forgetting to using only consistent ORIs not only overounts the data, but in some cases may undercount data. For example, 1998 saw a drop of over 500 agencies from the UCR data. These agencies were mostly small, in Florida or New York, and many returned to the UCR a few years later.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-5&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/consistent_ORIs_files/figure-html/unnamed-chunk-5-1.png&#34; alt=&#34;Year-over-year change in ORIs reporting to UCR, 1990-2016.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4: Year-over-year change in ORIs reporting to UCR, 1990-2016.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Criminologists (and anyone who works with crime data) need to be careful with how we treat data. Almost all data we use (FBI data in particular) is messy, incompletely, and difficult to work with. Fixing the data properly is hard. Taking shortcuts like using all ORIs is easy and usually doesn’t change the results too much. But it is wrong. More importantly, it gives wrong results. As current public discussions of crime often gets facts wrong, it is necessary that we spend the time to do data work properly to contribute meaningful data and results.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>UCR Data Tool</title>
      <link>/project/ucrdatatool/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/ucrdatatool/</guid>
      <description>&lt;iframe src=&#34;https://kaplan.shinyapps.io/ucrdatatool/&#34; style=&#34;position:fixed; top:75px; left:0px; bottom:0px; right:0px; width:100%; height:100%; margin:0; padding:0; overflow:hidden; z-index:999999;&#34;&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>United States Governors 1775-2018</title>
      <link>/project/united-states-governors-1775-2018/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/united-states-governors-1775-2018/</guid>
      <description>&lt;p&gt;This is a data set containing the name and party of every state or territory governor from the start of this country (technically 1775) to 2018.&lt;/p&gt;
&lt;p&gt;The original data (link below) had governor as the unit. It gave the governor’s name, the state, the party (or parties) they belonged to and which years they were in office. I changed this to state-year unit so for each state and year it says who the governor was and their party. For years 1950-2018 I made minor changes to the party variable. For example, if a governor (e.g. Ronald Reagan) was reported as belonging to multiple parties in their life, I changed the party for a given year to the party they belonged to that year. I DID NOT make any changes at all for years prior to 1950.&lt;/p&gt;
&lt;p&gt;As an example, here is the first 6 rows of the data.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;governor&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;state&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;year&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;party&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Bill Walker&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Alaska&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Independent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Lolo Matalasi Moliga&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;American Samoa&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Independent&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Doug Ducey&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arizona&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Republican&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Asa Hutchinson&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Arkansas&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Republican&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Edmund G. Brown&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;California&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Democrat&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;John Hickenlooper&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Colorado&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2018&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Democrat&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The data is &lt;a href=&#34;https://www.openicpsr.org/openicpsr/project/102000/version/V1/view&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The website where I got the raw data is &lt;a href=&#34;https://www.nga.org/cms/home&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The GitHub page containing code to download and clean the data is &lt;a href=&#34;https://github.com/jacobkap/governors&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>asciiSetupReader</title>
      <link>/project/asciisetupreader/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/asciisetupreader/</guid>
      <description></description>
    </item>
    
    <item>
      <title>fastDummies</title>
      <link>/project/fastdummies/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/fastdummies/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Introduction to R Markdown for a Thesis</title>
      <link>/introduction-to-r-markdown-for-a-thesis/</link>
      <pubDate>Mon, 12 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/introduction-to-r-markdown-for-a-thesis/</guid>
      <description>&lt;p&gt;Writing a thesis is stressful. R Markdown can help by reducing the number of things you have to think about. This guide can be used as an introduction to R Markdown, specifically for people working on a research thesis.&lt;/p&gt;
&lt;p&gt;If you’d like to follow along with the actual R Markdown file, here is a &lt;a href=&#34;https://github.com/jacobkap/crime_blog/tree/master/content/post&#34;&gt;link&lt;/a&gt; to that. The file you want is “2018-03-11-introduction-to-r-markdown.Rmd” and you can download it by right clicking and downloading. And here is a &lt;a href=&#34;https://github.com/jacobkap/crime_blog/tree/master/static/img/markdown_images&#34;&gt;link to the images included&lt;/a&gt; in this post - you’ll need those images to fully run the Markdown file (or you can delete the references to them.)&lt;/p&gt;
&lt;div id=&#34;abstract&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Abstract&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;R’s version of Markdown is essentially a Word document that allows R code. You can write in it just like in Word and include R code which will output right in the document. This is useful because if you change your code (such as changing a graph), it will also be changed in the document. You no longer have to remember to copy over the new results (graphs, tables, etc.) from R to Word. If you are changing your results (and you will more than you expect), using R Markdown will save you time.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;plain-text&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Plain text&lt;/h1&gt;
&lt;p&gt;Markdown works nearly identical to Word. The major difference is that it allows R code and you have to do more formatting yourself. If you do use Markdown, the main advice is to &lt;strong&gt;ignore formatting until the end!&lt;/strong&gt; Just ignore formatting until you absolutely need to. It is easiest to output to an HTML file until you are ready to format. HTML generally ignores formatting issues (such as figure alignment) that PDF or Word encounter.&lt;/p&gt;
&lt;p&gt;That said, let’s start with making a Markdown file in RStudio.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/markdown_images/markdown1.png&#34; alt=&#34;Opening a new R Markdown file&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Opening a new R Markdown file&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As seen above, you make a new R Markdown file using the same menu as making an R Script file, but now select &lt;code&gt;R Markdown...&lt;/code&gt;. From here it’ll open up a window where you select the title, author, and type of output. You can always change all three of these selections right in the Markdown file. Selecting PDF may require you to download additional software to get it to output - some OS may already have the software installed. For a nice guide to using PDF with R Markdown, see &lt;a href=&#34;https://medium.com/@sorenlind/create-pdf-.reports-using-r-r-markdown-latex-and-knitr-on-windows-10-952b0c48bfa9&#34;&gt;here&lt;/a&gt;. Formatting is also trickier in PDF than in HTML or Word.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/markdown_images/markdown2.png&#34; alt=&#34;Selecting the file’s name, author, and output type&#34; /&gt;
When you click OK, it will open a new R Markdown file that is already populated with example plain text and code. You can delete this entirely or modify what’s there to work with what you need.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/markdown_images/markdown6.png&#34; alt=&#34;The default R Markdown file&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;The default R Markdown file&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Let’s start with the text and its formatting. The first line of text shows two pound signs (#) followed by “R Markdown”. When a line start with # it means that that line is a header. Sections of the thesis should start with an # to indicate a new section. There are 6 types of headers and each is smaller than the previous one (1 is biggest, 6 is smallest). Header 1 has one # (e.g. # Header 1), header 6 has 6 # (e.g. ###### Header 6). Headers after header 1 are good for making subsections.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;header-1&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Header 1&lt;/h1&gt;
&lt;div id=&#34;header-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Header 2&lt;/h2&gt;
&lt;div id=&#34;header-3&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Header 3&lt;/h3&gt;
&lt;div id=&#34;header-4&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Header 4&lt;/h4&gt;
&lt;div id=&#34;header-5&#34; class=&#34;section level5&#34;&gt;
&lt;h5&gt;Header 5&lt;/h5&gt;
&lt;div id=&#34;header-6&#34; class=&#34;section level6&#34;&gt;
&lt;h6&gt;Header 6&lt;/h6&gt;
&lt;p&gt;New paragraphs can be made by ending a line with two spaces (or, for simplicity you can just have an entire blank line between paragraphs). Though it is not common in academic writing, you can make a word (or words) italic by surrounding it by a single asterix or underscore, like &lt;em&gt;so&lt;/em&gt; (*so*) and &lt;em&gt;so&lt;/em&gt; (_so_). To bold a word (or words), use two asterix, like &lt;strong&gt;so&lt;/strong&gt; (**so**) and &lt;strong&gt;so&lt;/strong&gt; (__so__). Include a block quote by starting a line with &amp;gt; followed by your quote&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a block quoted. Good for multiline quotes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You can make tables using formatting in the text, but it’s easier to do so using code. We will see that soon.&lt;/p&gt;
&lt;p&gt;Remembering all the formatting rules gets tricky and is not a good use of your time or effort. Refer to this &lt;a href=&#34;https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf&#34;&gt;reference guide&lt;/a&gt; for all the rules (such as how to include links in text). The reference guide includes more formatting options than noted here. &lt;a href=&#34;http://r4ds.had.co.nz/r-markdown.html&#34;&gt;This section&lt;/a&gt; of the free book R for Data Science is also an excellent resource.&lt;/p&gt;
&lt;p&gt;Again, focus on the content - write as if you were just using Word. Worry about formatting last.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Code&lt;/h1&gt;
&lt;p&gt;The reason R Markdown is useful is because you can include code output in the file. Here is an example before we get into using code in Markdown. Below is an arbitrary graph.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(1:100, type = &amp;quot;h&amp;quot;, col = &amp;quot;yellow&amp;quot;,
     main = &amp;quot;Awful graph title&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-11-introduction-to-r-markdown_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you had put this graph in your Word document and decided to change it you would have to replace it every time you made a change. While this is a minor procedure, it adds up if you have many graphs or decide to change the graph frequently. Below is the same graph with just the title and color changed. If this were my thesis, I could have changed the original code and been assured that the most up-to-date graph (or table, etc.) is always the one included with the thesis. Change the code and never think about it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(1:100, type = &amp;quot;h&amp;quot;, col = &amp;quot;blue&amp;quot;,
     main = &amp;quot;Great graph title!&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-03-11-introduction-to-r-markdown_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;div id=&#34;only-use-code-to-make-output&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Only use code to make output&lt;/h2&gt;
&lt;p&gt;Code in R Markdown is for showing results. This means only include the code that makes the graphs, tables (including regression output), etc.. The code to read in data and clean it should remain in your R Scripts. The code you do include here should only read in the cleaned data and create the output to include in the document.&lt;/p&gt;
&lt;p&gt;The terminology used here will be &lt;code&gt;chunks&lt;/code&gt;. This just means pieces of R code included among the plain text. All code must be in these chunks to be run. Inside a chunk, you can run any code you like. To make a chunk, click &lt;code&gt;Insert&lt;/code&gt; and then &lt;code&gt;R&lt;/code&gt;. It will add a chunk wherever your cursor is.&lt;/p&gt;
&lt;p&gt;If you do not have the R Markdown file in the same folder as your data, you’ll need to set the working directory in a chunk before reading the data. However, once a working directory is set, or data is read, it applies for all following chunks. You will also need to run any packages (using library()) to use them in a chunk.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/markdown_images/markdown3.PNG&#34; alt=&#34;Adding a new code chunk&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Adding a new code chunk&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/markdown_images/chunk_example.PNG&#34; alt=&#34;A code chunk&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;A code chunk&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Notice the three ` at the top and bottom of the chunk. Don’t touch these! They tell R that anything in it is a chunk (i.e. that R should run the code). Inside the squiggly brackets are instructions about how the code is outputted. Here you can specify, among other things (see reference guide for more), if the code will be outputted or just the output itself, captions for tables or graphs, and formatting for output. Include all of these options after the &lt;code&gt;r&lt;/code&gt; in the squiggly brackets. Multiple options must be separated by a comma (just like options in normal R functions). The most common option is &lt;code&gt;echo&lt;/code&gt; which says whether to show the code in the document or not. For the thesis you only want to show the output, not the code so include &lt;code&gt;echo = FALSE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here’s an example, first with default options then with &lt;code&gt;echo = FALSE&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(&amp;quot;Hello&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Hello&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Hello&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Though you can’t see it unless looking at the Markdown file, there are two code chunks, the second which has the &lt;code&gt;echo = FALSE&lt;/code&gt; option. That is why you only see the code “print(”Hello“)” above the first result.
When you make the output file (called “knitting” the file), all code chunks will run and you will see the output included in the document. To run the code inside of RStudio, click the green right-arrow at the top-right of each chunk. This will run all code in that chunk.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/markdown_images/markdown7.PNG&#34; alt=&#34;Run the code in a chunk&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Run the code in a chunk&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;figures-and-tables&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Figures and Tables&lt;/h2&gt;
&lt;p&gt;Above was a code chunk that makes a graph. The only addition you will likely make to this type of code is to add a caption. Do this by adding the option &lt;code&gt;fig.cap = &amp;quot;&amp;quot;&lt;/code&gt; with the caption in the quotes.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-6&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2018-03-11-introduction-to-r-markdown_files/figure-html/unnamed-chunk-6-1.png&#34; alt=&#34;This is an example figure caption&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: This is an example figure caption
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/markdown_images/figure_caption.PNG&#34; alt=&#34;Note the figure caption is in the chunk options section (squiggly brackets)&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Note the figure caption is in the chunk options section (squiggly brackets)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There a number of packages that change how tables are displayed. We will use the basic &lt;code&gt;knitr&lt;/code&gt; package. The easiest way to make a table in Markdown is to make a data.frame with all the data (and column names) you want and then show that data.frame. For this example we will subset the mtcars data (which is included in R) to just the first 5 rows and columns. The &lt;code&gt;kable&lt;/code&gt; function from the &lt;code&gt;knitr&lt;/code&gt; package will then make a nice looking table. With &lt;code&gt;kable&lt;/code&gt; you can add the caption directly in the &lt;code&gt;kable()&lt;/code&gt; function rather than using &lt;code&gt;fig.cap =&amp;quot;&amp;quot;&lt;/code&gt; in the chunk. The option &lt;code&gt;echo&lt;/code&gt; is set to TRUE here so you can see the code without looking at the Markdown file itself.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(knitr)
mtcars_small &amp;lt;- mtcars[1:5, 1:5]
kable(mtcars_small, caption = &amp;quot;This is an example table caption&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;&lt;span id=&#34;tab:unnamed-chunk-7&#34;&gt;Table 1: &lt;/span&gt;This is an example table caption&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;mpg&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;cyl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;disp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;hp&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;drat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Mazda RX4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;160&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;110&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Mazda RX4 Wag&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;160&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;110&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Datsun 710&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;22.8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;108&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;93&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.85&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Hornet 4 Drive&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21.4&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;258&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;110&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.08&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Hornet Sportabout&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;18.7&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;8&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;360&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;175&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3.15&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;finally-making-the-output-file&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Finally, making the output file&lt;/h1&gt;
&lt;p&gt;To create the Word or PDF output click &lt;code&gt;Knit&lt;/code&gt; and it will create the output in the format set in the very top. To change this format click the white down-arrow directly to the right of &lt;code&gt;Knit&lt;/code&gt; and it will drop-down a menu with output options. Click the option you want and it will output it in that format and change that to the new default. Sometimes it takes a while for it to output, so be patient. And sometimes it fails so just try to output again.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/img/markdown_images/markdown4.PNG&#34; alt=&#34;Change the output format&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Change the output format&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Markdown has many more options than presented here. This lesson should get you through the thesis. If you are interested in Markdown, there are great resources online.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Where Recreational Marijuana is Sold in California</title>
      <link>/where-recreational-marijuana-is-sold-in-california/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/where-recreational-marijuana-is-sold-in-california/</guid>
      <description>&lt;p&gt;The new year brings the start of recreational marijuana sales in California. According to an &lt;a href=&#34;http://www.capradio.org/articles/2018/01/01/its-now-legal-to-buy-pot-in-california-but-red-tape-could-slow-supply-chain/&#34;&gt;article on capradio.com&lt;/a&gt;, only part of the state has accesses to recreational marijuana stores. That is due to a mix of municipalities banning stores within their jurisdiction as well as only a limited number of stores given licenses to sell.&lt;/p&gt;
&lt;p&gt;I decided to look at where people in California could buy recreational marijuana. The state government’s Bureau of Cannabis Control lists all businesses with licenses to be involved with marijuana. I looked at businesses with a license to sell recreationally marijuana (business that are “Nonstorefront” are excluded).&lt;/p&gt;
&lt;p&gt;As of about 10am, there were &lt;a href=&#34;https://aca5.accela.com/bcc/Cap/CapHome.aspx?module=Licenses&amp;amp;ShowMyPermitList=N&#34;&gt;95 businesses with this license&lt;/a&gt;, all of them had temporary licenses that last for 120 days (by 5pm, the website showed 100 licenses). I collected the data in the morninig so will only show maps based on those 95 licenses.&lt;/p&gt;
&lt;p&gt;I geocoded the 95 addresses, getting info for 94 of the locations. From this, I made three graphs showing how the 94 stores are dispersed across the state. Figure 1 and Figure 2 show the same data, the number of stores per county. Figure 2 provides a bit more context by showing a Google Maps image along with the shades counties. The majority of stores are concentrated in population centers. The Bay Area, Silicon Valley, and San Diego area have the most stores. The far north part of the state, which is known as the area where marijuana is often grown, also has a scattering of stores. Strangely, Los Angeles has fewer stores than I’d expect given their population.&lt;/p&gt;
&lt;p&gt;Figure 3 shows each individual store rather than counties.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-1&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2018-01-01-where-recreational-marijuana-is-sold-in-california_files/figure-html/unnamed-chunk-1-1.png&#34; alt=&#34;Recreational Marijuana Stores in California as of January 1, 2018.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Recreational Marijuana Stores in California as of January 1, 2018.
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2018-01-01-where-recreational-marijuana-is-sold-in-california_files/figure-html/unnamed-chunk-2-1.png&#34; alt=&#34;Recreational Marijuana Stores in California as of January 1, 2018.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Recreational Marijuana Stores in California as of January 1, 2018.
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-3&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2018-01-01-where-recreational-marijuana-is-sold-in-california_files/figure-html/unnamed-chunk-3-1.png&#34; alt=&#34;Each dot indicates one recreational marijuana store open as of January 1, 2018.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Each dot indicates one recreational marijuana store open as of January 1, 2018.
&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Reading Fixed-Width ASCII Files into R</title>
      <link>/reading-fixed-width-ascii-files-into-r/</link>
      <pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/reading-fixed-width-ascii-files-into-r/</guid>
      <description>&lt;p&gt;The majority of old (pre-2010) government data on crime comes in fixed-width ASCII files that have SPSS (file extension .sps) or SAS (file extension .sas) setup files. Important crime data (e.g. UCR and NIBRS) is still being released in this format. I created the R package asciiSetupReader to use R users be able to read this type of data. Here I will explain how these files work in theory, then walk through an example of using the package.&lt;/p&gt;
&lt;p&gt;Fixed-width ASCII files are text files that are designed to be as small as possible. They do this by not having any indicator of columns. Whereas modern files will have spaces or commas to indicate that a column begins, fixed-width ASCII files have nothing. What they do have are setup files. Setup files indicate which characters in a row belong to which columns. The setup files also provide information and key-value pairs and column names, but lets start with the columns.&lt;/p&gt;
&lt;p&gt;The data in the ASCII files are essentially a long string for each row. Below is a string I just made up but is something like what you’d see if you ever opened the text file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CA9MW35&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This data is read by knowing which characters are in which column. If we know the first two characters are columns, character 3, 4 and 5 are each columns, and the two two characters are a single column, we can read in the data. The setup file provides this. It’ll be in the format of the column name (Usually it will have a placeholder name like V1 here and provide the real name later) and then the character(s) that make up the column.&lt;/p&gt;
&lt;p&gt;V1 1-2&lt;br /&gt;
V2 3&lt;br /&gt;
V3 4&lt;br /&gt;
V4 5&lt;br /&gt;
V5 6-7&lt;/p&gt;
&lt;p&gt;A dataset using the above string and column instructions will look like this.&lt;/p&gt;
&lt;table style=&#34;width:35%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;col width=&#34;6%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;V1&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;V2&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;V3&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;V4&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;V5&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;W&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The setup file also includes the names of the columns rather than the placeholders used to say how to break up the columns. In similar syntax to the above section, it has the placeholder column name followed by the real column name in quotes. This syntax continues when dealing with key-value pairs.&lt;/p&gt;
&lt;p&gt;V1 “State”&lt;br /&gt;
V2 “Crime”&lt;br /&gt;
V3 “Sex”&lt;br /&gt;
V4 “Race”&lt;br /&gt;
V5 “Victim_age&lt;/p&gt;
&lt;table style=&#34;width:57%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;11%&#34; /&gt;
&lt;col width=&#34;11%&#34; /&gt;
&lt;col width=&#34;8%&#34; /&gt;
&lt;col width=&#34;9%&#34; /&gt;
&lt;col width=&#34;16%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;State&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Crime&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Sex&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Race&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Victim_age&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;CA&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;9&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;M&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;W&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;At this point we can see the true brilliance of fixed-width ASCII files. In their attempt to make the files as small as possible, they contain keys rather than the true labels for values. What does that mean? Look at the Race column. Instead of writing out White every time the value is White, it just has the letter W. This is done to save space. W takes up 1/5 as many characters as White, thus saving considerable space (and file size) every time it is used in place of the true label White. While, this isn’t a big issue now that we have very good compression software, but in its time it was useful. The setup files include all of the key-value pairs so it can automatically replace keys (W) with their values (White). This saves us a lot of time and mistakes if we had to rely on the codebook for every key in every column.&lt;/p&gt;
&lt;p&gt;The key-values section of a setup file looks like this. First is the key, then the value in quotes.&lt;/p&gt;
&lt;p&gt;V1&lt;br /&gt;
CA ‘California’&lt;br /&gt;
V2&lt;br /&gt;
9 ‘Murder’&lt;br /&gt;
V3&lt;br /&gt;
M ‘Male’&lt;br /&gt;
V4&lt;br /&gt;
W ‘White’&lt;/p&gt;
&lt;p&gt;And the final data set looks like this:&lt;/p&gt;
&lt;table style=&#34;width:68%;&#34;&gt;
&lt;colgroup&gt;
&lt;col width=&#34;18%&#34; /&gt;
&lt;col width=&#34;12%&#34; /&gt;
&lt;col width=&#34;9%&#34; /&gt;
&lt;col width=&#34;11%&#34; /&gt;
&lt;col width=&#34;16%&#34; /&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;center&#34;&gt;State&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Crime&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Sex&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Race&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Victim_age&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;center&#34;&gt;California&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Murder&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;Male&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;White&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The keys have been replaced by their values, which is must easier to understand. The crime 9 has been replaced by Murder, saving us having to check the codebook. Notice that the value in Victim_age hasn’t changed and that that column isn’t even in the key-values section above. That is become not every column has keys to change to values. Almost no numeric column does since those numbers are just numbers, they won’t change (some data sets will have some ages be values, such as age 0 being called “under 1 year old”).&lt;/p&gt;
&lt;div id=&#34;using-the-asciisetupreader-package&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Using the asciiSetupReader package&lt;/h2&gt;
&lt;p&gt;To use the package, you may install it from CRAN using install.packages(“asciiSetupReader”) or get the development version from GitHub devtools::install_github(“jacobkap/asciiReader”). To read in the data we need both the ASCII file and its setup file. We will use the Law Enforcement Agency Identifiers Crosswalk, 2012 as the example which you can download from its &lt;a href=&#34;http://www.icpsr.umich.edu/icpsrweb/NACJD/studies/35158?q=leaic&#34;&gt;ICPSR page&lt;/a&gt; (Click on SPSS Setup and it will download all the necessary files) or from my GitHub &lt;a href=&#34;&#34;&gt;here&lt;/a&gt;. The files from ICPSR have a name related to the study ID so I renamed it “leaic2012” for simplicity. The parameters and steps to use the function is identical for sas_ascii_reader.&lt;/p&gt;
&lt;p&gt;Now, all we need to do to load the data is to input the text and setup file names to the function spss_ascii_reader of the package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(asciiSetupReader)
# Data is in the data folder
leaic &amp;lt;- spss_ascii_reader(dataset_name = &amp;quot;data/leaic2012.txt&amp;quot;, sps_name = &amp;quot;data/leaic2012.sps&amp;quot;)
dim(leaic)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 36490    40&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(leaic)[1:5] # Show head of first 5 columns&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   FIPS_STATE_CODE FIPS_COUNTY_CODE FIPS_PLACE_CODE
## 1         Alabama              001           03220
## 2         Alabama              001           62328
## 3         Alabama              001           62328
## 4         Alabama              001           99001
## 5         Alabama              003           04660
## 6         Alabama              003           04660
##   FIPS_STATE_CODE_ALPHANUMERIC FIPS_COUNTY_CODE_ALPHANUMERIC
## 1                            1                             1
## 2                            1                             1
## 3                            1                             1
## 4                            1                             1
## 5                            1                             3
## 6                            1                             3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That’s all it takes to read in the data. The function also has three optional parameters. value_label_fix is a Boolean parameter (default is TRUE) for if you want to do the key-value swap. This is what changes W to White for example. Changing this to false means you get exactly what is in the text file without any replacement.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Data is in the data folder
leaic &amp;lt;- spss_ascii_reader(dataset_name = &amp;quot;data/leaic2012.txt&amp;quot;, sps_name = &amp;quot;data/leaic2012.sps&amp;quot;, value_label_fix = FALSE)
dim(leaic)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 36490    40&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(leaic)[1:5] # Show head of first 5 columns&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   FIPS_STATE_CODE FIPS_COUNTY_CODE FIPS_PLACE_CODE
## 1               1                1            3220
## 2               1                1           62328
## 3               1                1           62328
## 4               1                1           99001
## 5               1                3            4660
## 6               1                3            4660
##   FIPS_STATE_CODE_ALPHANUMERIC FIPS_COUNTY_CODE_ALPHANUMERIC
## 1                            1                             1
## 2                            1                             1
## 3                            1                             1
## 4                            1                             1
## 5                            1                             3
## 6                            1                             3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;real_names is also a Boolean parameter (default is TRUE) on if you want to real name of the column or the placeholder column names.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Data is in the data folder
leaic &amp;lt;- spss_ascii_reader(dataset_name = &amp;quot;data/leaic2012.txt&amp;quot;, sps_name = &amp;quot;data/leaic2012.sps&amp;quot;, real_names = FALSE)
dim(leaic)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 36490    40&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(leaic)[1:5] # Show head of first 5 columns&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    FSTATE FCOUNTY FPLACE FIPS_ST FIPS_COUNTY
## 1 Alabama     001  03220       1           1
## 2 Alabama     001  62328       1           1
## 3 Alabama     001  62328       1           1
## 4 Alabama     001  99001       1           1
## 5 Alabama     003  04660       1           3
## 6 Alabama     003  04660       1           3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;keep_columns is the final optional parameter and is very important when dealing with large data. This parameter lets you select which columns to include. If can accept column numbers, the placeholder names, or the real column names but you cannot mix and match. The value in this parameter is that you only get the columns you need, keeping the file size as small as possible. As an example, I often deal with NIBRS data with is ~5 million rows long and has hundreds of columns. Using this parameter I get only a small number of columns rather than all of it. Without it, my computer wouldn’t be able to read in the data. Since you need to know what columns to include before you load the data, you should consult the data’s codebook.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Data is in the data folder
leaic &amp;lt;- spss_ascii_reader(dataset_name = &amp;quot;data/leaic2012.txt&amp;quot;, sps_name = &amp;quot;data/leaic2012.sps&amp;quot;, keep_columns = c(1:5, 11:20))
dim(leaic)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 36490    15&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(leaic)[1:5] # Show head of first 5 columns&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   FIPS_STATE_CODE FIPS_COUNTY_CODE FIPS_PLACE_CODE
## 1         Alabama              001           03220
## 2         Alabama              001           62328
## 3         Alabama              001           62328
## 4         Alabama              001           99001
## 5         Alabama              003           04660
## 6         Alabama              003           04660
##   FIPS_STATE_CODE_ALPHANUMERIC FIPS_COUNTY_CODE_ALPHANUMERIC
## 1                            1                             1
## 2                            1                             1
## 3                            1                             1
## 4                            1                             1
## 5                            1                             3
## 6                            1                             3&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that when looking at the output from dim(), the number of the rows never changes but now the data set only has the 15 columns we specify.&lt;/p&gt;
&lt;p&gt;If you find any bugs or have any suggestions, please post on the packages &lt;a href=&#34;https://github.com/jacobkap/asciiReader&#34;&gt;GitHub page&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Do Mexican Immigrants Cause Crime?</title>
      <link>/do-mexican-immigrants-cause-crime/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/do-mexican-immigrants-cause-crime/</guid>
      <description>&lt;p&gt;There has been a lot of talk lately about immigration. In particular, about if immigrants cause crime in the cities they go to. Like a lot of controversial topics, this one is based mainly in anecdotes and exaggerations. Here is some data regarding the issue.&lt;/p&gt;
&lt;p&gt;In this post I look at the relationship between crime rates and Mexican immigrant population in 102 counties between 1980 and 2010. For a full methodology and the R code used to analyze the data, see below. Please note that this is just a simple analysis and doesn’t indicate a causal relationship.&lt;/p&gt;
&lt;p&gt;I used data from two sources for this analysis. Crime data came from the FBI’s Uniform Crime Report (UCR) and Mexican immigration data came from the Census. There were 102 counties that were available in both data sets for both years 1980 and 2010. Figure one shows a scatterplots of the relationship. The blue line shows a line of best fit. The blue line is slightly downward sloping indicating that there is a negative relationship. As Mexican immigrant proportion increases, crime decreases. However this relationship seems fairly mild. The points are also not very close to the blue line, showing that even if the relationship does exist, it’s not a very strong one.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-1&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2017-11-21-do-mexican-immigrants-cause-crime_files/figure-html/unnamed-chunk-1-1.png&#34; alt=&#34;Relationship between crime (Part I offenses) and Mexican immigrant population. 102 counties included.&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Relationship between crime (Part I offenses) and Mexican immigrant population. 102 counties included.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So it looks like there may be a weak negative relationship here. But looking at all counties together may be misleading. With this data, we can look deeper and see if the relationship changes among subcategories of cities (It would also be wise to see how specific crimes change but I’m not doing that here). Lets break the counties up for into the top and bottom half of crime rates in 1980, and then top and bottom thirds.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-2&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2017-11-21-do-mexican-immigrants-cause-crime_files/figure-html/unnamed-chunk-2-1.png&#34; alt=&#34;Relationship between crime (Part I offenses) and Mexican immigrant population. Counties split into the top and bottom halves of crime in 1980. 102 counties included&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Relationship between crime (Part I offenses) and Mexican immigrant population. Counties split into the top and bottom halves of crime in 1980. 102 counties included
&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:unnamed-chunk-3&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;/post/2017-11-21-do-mexican-immigrants-cause-crime_files/figure-html/unnamed-chunk-3-1.png&#34; alt=&#34;Relationship between crime (Part I offenses) and Mexican immigrant population. Counties split into the top and bottom thirds of crime in 1980. 68 counties included&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Relationship between crime (Part I offenses) and Mexican immigrant population. Counties split into the top and bottom thirds of crime in 1980. 68 counties included
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Here we see something quite different. Mexican immigrants do increase crime. But only in counties they had low crime in 1980. In counties with high crime in 1980, they decrease it. Figure 3 shows crime broken into top and bottom third (the middle third of data is excluded) and shows an even higher increase in crime in low crime counties.&lt;/p&gt;
&lt;p&gt;How should we interpret this? First, it is a good example of problems with aggregated data. The story completely changed (and become more interesting) after breaking up the counties into high and low crime. Second, it appears that Mexican immigrants do not cause crime wherever they go. Nor is the presence always leading to a decrease in crime. They seem to be pretty average.&lt;/p&gt;
&lt;p&gt;Crime literature (and I do so myself) often talks about crime as if it’s directly tied to the population. If the number of people go up by X, crime should go up by some multiple of X. But that’s not really true. Crime will go up if a bus full of felons comes into town. It won’t go up if that bus is full of nuns. It really depends on who the new population is. If it’s a bunch of average people, then high crime areas with have less crime, low crime areas will have more crime. These graphs (again, not causal) indicate that Mexican immigrants are just average. Crime reverts to average crime rates wherever they go.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Downloading data from the FBI&#39;s UCR 2016</title>
      <link>/downloading-data-from-the-fbi-ucr-2016/</link>
      <pubDate>Sat, 18 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/downloading-data-from-the-fbi-ucr-2016/</guid>
      <description>&lt;p&gt;The FBI has recently (September 2017) released the raw files for UCR data for 2016. As usual, these files are in fixed-width ASCII files and do not come with a usable setup file. To make this data accessible, I made those setup files using the codebook provided by the FBI along with the raw data. Using the R package asciiSetupReader, I read the data into R and saved it in a number of data formats. These cleaned files are now available at openICPSR. Below are the links to the openICPSR page for each of the files as well as the formats available. After that is a brief methodology section for how I created the setup files and checked for accuracy.&lt;/p&gt;
&lt;div id=&#34;files-available&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Files Available&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.openicpsr.org/openicpsr/project/101126/version/V1/view&#34;&gt;Arrests by Age, Sex, and Race, 2016&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;CSV&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;Stata&lt;br /&gt;
&lt;/li&gt;
&lt;li&gt;SPSS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;methodology&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Methodology&lt;/h2&gt;
&lt;p&gt;When they send the raw data, the FBI includes a codebook for understanding the data. While close, this codebook is not a setup file. To read fixed-width ASCII files, you need a setup file explaining how to break up each row into the appropriate columns. I used the codebook to produce a setup file in the SPSS style. Then, using the package asciiSetupReader, read the raw data into R. This raw data was then saved as a few different file types (see above). ICPSR provides cleaned (i.e. not raw) data for UCR data up until 2015 (2016 is not yet available). I used this data to compare my setup reader against. I used asciiSetupReader to read in 2015 data and compared that against 2015 data from ICPSR to ensure it was accurate.&lt;/p&gt;
&lt;p&gt;For the exact code used to produce the setup files and check for accuracy, see my GitHub page &lt;a href=&#34;https://github.com/jacobkap/UCR2016/tree/master/R&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
